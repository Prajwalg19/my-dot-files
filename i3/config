#
#  _ _____                    __ _
# (_)___ /    ___ ___  _ __  / _(_) __ _
# | | |_ \   / __/ _ \| '_ \| |_| |/ _` |
# | |___) | | (_| (_) | | | |  _| | (_| |
# |_|____/   \___\___/|_| |_|_| |_|\__, |
#                                  |___/
set $mod Mod4

# Sreen brightness controls
#bindsym XF86MonBrightnessUp exec light -A 1 # increase screen brightness
#bindsym XF86MonBrightnessDown exec light -U 1 # decrease screen brightness
#Frame rate
exec_always xrandr --rate 60
#touchpad
exec_always xinput set-prop 13 "Device Enabled" 0
# bindsym Print exec maim -s --format png /dev/stdout | xclip -selection clipboard -t image/png -i
# bindsym $mod+Print exec maim --select | tee ~/Pictures/$(date +%s).png | xclip -sel c -t image/png

# Screenshots
#anytyhing with mod is for active window
#anything with ctrl is for clipboard
#aything with shift is for cropping

bindsym Print exec --no-startup-id maim "/home/$USER/Pictures/Screenshots/$(date)"
bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/Pictures/Active_Screenshots/$(date)"
bindsym Shift+Print exec --no-startup-id maim --select "/home/$USER/Pictures/Cropped/$(date)"

## Clipboard Screenshots
bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png


bindsym $mod+Shift+Return exec --no-startup-id rofi -show drun


bindsym $mod+Control+l workspace next
bindsym $mod+Control+h workspace prev
# bindsym $mod+Shift+Return exec ulauncher
# Default modkey

# Hide titlebar
new_window pixel

# Font for window titles.
font pango: SauceCodePro Nerd Font 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Start a terminal
bindsym $mod+Return exec alacritty

# Kill focused window
bindsym $mod+Shift+q kill
bindsym $mod+Shift+s exec systemctl suspend


# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show


# Move between windows
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Split in horizontal orientation
#bindsym $mod+shift+h split h

# Split in vertical orientation
bindsym $mod+shift+v split v
#bindsym $mod+shift+Return exec ~/.config/rofi/launchers/type-1/launcher.sh
# Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# Change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Focus the parent container
bindsym $mod+a focus parent

# Name the workspaces
set $workspace1 "1: ÔÑ† "
set $workspace2 "2: Ôâ© "
set $workspace3 "3: ÔÑ° "
set $workspace4 "4: ÔÜÜ "
set $workspace5 "5: ÔÅÄ "
set $workspace6 "6: ÔÉê "
set $workspace7 "7: ÔÇÑ "
set $workspace8 "8: ÔÅº "
set $workspace9 "9: ÔÄÉ "
set $workspace0 "10: ÔÜº "

# Switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace0

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace0

# Always open some programs on specified workspace
# assign [class="^Slack"]            $workspace7
assign [class="^Spotify"]          $workspace0
assign [class="^Thunderbird"]      $workspace8
assign [class="^YouTube Music"]    $workspace0
assign [class="^Xournal"]           $workspace6
# assign [class="^firefox"]           $workspace2

# Enable float for some windows
for_window [class="^Pavucontrol$"]  floating enable
for_window [class="^Lxappearance$"] floating enable
for_window [class="^Arandr$"]       floating enable
for_window [class="^Blueman-manager"]  floating enable
for_window [class="^Pavucontrol$"]  floating enable
for_window [class="^gnome-calculator"] floating enable
for_window [class="^Vlc"] floating enable
for_window [class="^vlc"] floating enable
for_window [class="^Main"] floating enable

# for_window [class="^Nemo"]  floating enable
# Always open workspaces in certain outputs
# workspace "1: ÔÑ† " output primary
# workspace "2: ÔÑ° " output primary
# workspace "3: ÔÑï " output primary
# workspace "4: ÔÜÜ " output primary
# workspace "5: ÔÅÄ " output primary
# workspace "6: ÔÉê " output DP-4
# workspace "7: ÔÇÑ " output DP-4
# workspace "8: üñ•" output DP-4
# workspace "9: ÔÄÉ " output DP-4
# workspace "10: ÔÜº " output DP-4
# Reload the configuration file
bindsym $mod+Shift+c reload

# Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Lock screen
bindsym $mod+Shift+x exec i3lock -c 000000

# Resize window (you can also use the mouse for that)
mode "resize"
{
    # Resize with the arrow keys
    bindsym h  resize shrink width  1 px or 1 ppt
    bindsym j  resize grow   height 1 px or 1 ppt
    bindsym k    resize shrink height 1 px or 1 ppt
    bindsym l resize grow   width  1 px or 1 ppt

    # Back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# class                 border  bground text    indicator child_border
# client.focused          #6272A4 #6272A4 #F8F8F2 #6272A4   #6272A4
# client.focused_inactive #44475A #44475A #F8F8F2 #44475A   #44475A
# client.unfocused        #282A36 #282A36 #BFBFBF #282A36   #282A36
# client.urgent           #44475A #FF5555 #F8F8F2 #FF5555   #FF5555
# client.placeholder      #282A36 #282A36 #F8F8F2 #282A36   #282A36
# client.background       #F8F8F2


set $screen-bg-color     #222831
set $bg-color            #00ADB5
set $inactive-bg-color   #393E46
set $text-color          #EEEEEE
set $inactive-text-color #00ADB5
set $urgent-bg-color     #F05454
set $indicator-color     #000000
set $rofi-background-color #f2222831
set $rofi-item-background-color #00222831
set $rofi-text-color       #EEEEEE
set $rofi-text-active-color #00ADB5

# window colors
# #                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color              $indicator-color
client.unfocused        $inactive-bg-color  $inactive-bg-color $inactive-text-color     $indicator-color
client.focused_inactive $inactive-bg-color  $inactive-bg-color $inactive-text-color     $indicator-color
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color              $indicator-color

hide_edge_borders horizontal
smart_borders on
smart_gaps on

gaps inner 3
gaps outer -4
# for_window [class="^.*"] titlebar none

# Start i3blocks to display a workspace bar
# bar {
#
#     font pango: SauceCodePro Nerd Font 11
#     i3bar_command i3bar
#     position top
#     strip_workspace_numbers yes
#     tray_output nonprimary
#
#     colors {
#         background #282A36
#         statusline #F8F8F2
#         separator  #44475A
#
#         focused_workspace  #44475A #44475A #F8F8F2
#         active_workspace   #282A36 #44475A #F8F8F2
#         inactive_workspace #282A36 #282A36 #BFBFBF
#         urgent_workspace   #FF5555 #FF5555 #F8F8F2
#         binding_mode       #FF5555 #FF5555 #F8F8F2
#     } }

# bar {
#      tray_output nonprimary
#     font pango: Mononoki nerd font 11.4
#     position top
#     status_command /home/dev/.cargo/bin/i3status-rs  /home/dev/i3status-rust/config.toml
# }

bar {
    status_command /home/prajwal/.cargo/bin/i3status-rs  /home/prajwal/i3status-rust/config.toml
    # i3bar_command i3bar --transparency
    font pango: JetBrains Mono Nerd Font Bold 11
    # font pango: Mononoki Nerd Font 11
    # font pango: JetBrains Mono 11.4
    position top
    tray_output primary
    modifier Mod1
    colors {
        statusline #f8f8f2
        focused_workspace #50fa7b70 #50fa7b #282a36
        active_workspace #8be9fd70 #8be9fd #282a36
        inactive_workspace #282a3670 #282a3670 #f8f8f2
    }
    padding -1
}
bindsym $mod+m bar mode toggle
#bar {
#     set $date_format "%d/%m/%Y"
#     font pango:Mononoki Nerd Font 12.7
# 	position top
# 	tray_output none
# }




# bar {
#     font pango: SauceCodePro Nerd Font 10
#     i3bar_command i3bar
#     output nonprimary
#     position top
#     strip_workspace_numbers yes
#     tray_output DP-4
#
#     colors {
#         background #282A36
#         statusline #F8F8F2
#         separator  #44475A
#
#         focused_workspace  #44475A #44475A #F8F8F2
#         active_workspace   #282A36 #44475A #F8F8F2
#         inactive_workspace #282A36 #282A36 #BFBFBF
#         urgent_workspace   #FF5555 #FF5555 #F8F8F2
#         binding_mode       #FF5555 #FF5555 #F8F8F2
#     }}

# Startup programs
exec_always nitrogen --restore
#exec_always feh --bg-scale  /usr/share/backgrounds/nathan-anderson-iYO-EGosrCo-unsplash.jpg
exec_always --no-startup-id dunst
exec_always picom --config ~/.config/picom.conf
bindsym $mod+Shift+o exec killall i3
exec_always --no-startup-id redshift -P -O 4100

# bindsym $mod+b exec firefox
# bindsym $mod+n exec nemo
exec_always --no-startup-id xrandr --screen 60
# bindsym $mod+p exec evince


#increase volume
# bindsym $mod+F8  exec amixer set Master 5%+
# # Decrease volume
# bindsym $mod+F7 exec amixer set Master 5%-
# # Mute/unmute volume using Ctrl+F6
bindsym $mod+F9 exec amixer -D pulse sset Master toggle

# Increase volume with XF86AudioRaiseVolume key
bindsym $mod+F11 exec amixer -D pulse sset Master 10%+

# Decrease volume with XF86AudioLowerVolume key
bindsym $mod+F10 exec amixer -D pulse sset Master 10%-





# Increase screen brightness with XF86MonBrightnessUp key
bindsym $mod+F3 exec brightnessctl set +10%

# Decrease screen brightness with XF86MonBrightnessDown key
bindsym $mod+F2 exec brightnessctl set 10%-
#CapsLock indicator
# mode "caps" {
#         bindsym Caps_Lock mode "default"
# }
# bindsym Caps_Lock mode "caps"

bindsym $mod+z split h;exec notify-send 'tile horizontally'
bindsym $mod+v split v;exec notify-send 'tile vertically'
bindsym $mod+q split toggle
